user nobody nogroup;
worker_processes auto;          # auto-detect number of logical CPU cores

events {
  worker_connections 512;       # set the max number of simultaneous connections (per worker process)
}

http {

  ## Compression - Enabling gz for Bug 19563: iGoddard is slow to load across environments
  gzip on;
  gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript image/x-icon application/vnd.ms-fontobject font/opentype application/x-font-ttf;
  gzip_vary on;
  gzip_proxied any; # Compression for all requests.

  server {
    listen *:80;                                                # Listen for incoming connections from any interface on port 80
    server_name "";                                             # Don't worry if "Host" HTTP Header is empty or not set
    root /usr/share/nginx/html;                                 # serve static files from here
    include       /etc/nginx/mime.types;                        # Send appropriate MIME types
    add_header X-XSS-Protection "1; mode=block";                # Add X-XSS-Protection header
    add_header Content-Security-Policy "frame-ancestors 'none'"; # Add Content-Security-Policy
    add_header X-Content-Type-Options nosniff;                  # Add X-Content-Type-Options
#    add_header Set-Cookie "Path=/; Secure;";                    # Add Secure flag on all cookies
    add_header X-Frame-Options "DENY" always;                   # Do not allow framing
    server_tokens off;                                          # Remove server version
    location / {
      try_files $uri /index.html;
    }

    # 20230516RBP - FIX #19877: Do not cache so that page is always loaded first with a valid MSFT auth token before any other resources are requested.
    # credit: https://stackoverflow.com/a/33382910
    # credit: https://stackoverflow.com/questions/41631399/disable-caching-of-a-single-file-with-try-files-directive
    location = /index.html {
      expires -1;
      add_header Pragma "no-cache";
      add_header Cache-Control "no-store";
    }
  }
}
